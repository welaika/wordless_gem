![Wordless logo](https://raw.githubusercontent.com/welaika/wordless_gem/master/assets/images/wordless_gem.png)

The quickest CLI tool to setup a new WordPress locally. [Wordless](https://github.com/welaika/wordless) ready.

[![Build Status](https://semaphoreci.com/api/v1/welaika/wordless_gem/branches/master/badge.svg)](https://semaphoreci.com/welaika/wordless_gem)

## Premise

This is a ruby-gem, so we expect you have already installed _ruby_, since it is there by default on Mac and Linux; if it isn't
the case, probably you'll like to take a look to [rbenv](https://github.com/sstephenson/rbenv).

## Prerequisites

The only prerequisite that's up to you is to have the right version of node installed.
Refer to https://wordless.readthedocs.io/en/latest/_pages/stack/node.html#node for the documentation.

The gem will try to `nvm use` into the theme during the process. If it won't work, it will fallback using global
node version. If your global available node version won't match the required one, then the
process will fail due to `yarn` compelling about version mismatch.

## Installation

    gem install wordless

## Usage

    wordless help

    Tasks:
      wordless help [TASK]   # Describe available tasks or one specific task
      wordless new <NAME>    # Download WordPress in specified directory, install the Wordless plugin and create a Wordless theme

#### new

Create a new Wordless-enabled WordPress site in directory `NAME`. This downloads the latest stable release of WordPress (you can also specify a locale):

    wordless new mysite

```bash
> wordless help new
Usage:
  wordless new <NAME>

Options:
      [--force]                          # Overwrite existing WP-CLI / WP-CLI Server installation
  -l, [--locale=LOCALE]                  # WordPress locale
                                         # Default: en_US
  -b, [--bare=BARE]                      # Remove default themes and plugins
                                         # Default: true
      [--admin-user=ADMIN_USER]          # WordPress admin user
                                         # Default: admin
      [--admin-email=ADMIN_EMAIL]        # WordPress admin email
                                         # Default: admin@example.com
      [--admin-password=ADMIN_PASSWORD]  # WordPress admin password
                                         # Default: password
      [--db-user=DB_USER]                # MySQL database user
                                         # Default: root
      [--db-password=DB_PASSWORD]        # MySQL database pasword
      [--site-url=SITE_URL]              # Wordpress site URL
                                         # Default: http://localhost:8080
```

This command will:

* Check if nodejs and necessary global modules are installed
* Setup a new database
* Install WP-CLI (prompt if already installed)
* Download WordPress
* Configure WordPress
* Bootstrap and prepare a new Wordless theme
* Make you a happier developer

A super **short video to understand** how much time a new development WordPress site should require to be up and running.

https://youtu.be/Tu1xMtMoahk

## Notes

- Be sure to have MySQL running before start the installation process: we have to create a database
- Default db-password is no password. Use the `--db-password=` option if you have one
- If a DB with the same name is already present, we will give up. Sorry.
- If you attempt to download a WordPress localization that's outdated, the latest English version will be downloaded instead.
- Not tested on Windows

## Wordless < 2 ?

If you are still working with an old Wordless theme and you need the ruby-releated features
of the `wordless` gem, you need to install the last version 1.x version released

```
gem uninstall wordless
gem install wordless -v '1.1.6'
```

and you can read the old README [here](https://github.com/welaika/wordless_gem/tree/v1.1.2)

## Running specs

```bash
bundle install && ./bin/setup.sh && rspec
```

We've noticed problems running tests while using `rvm`; all of them solved using `rbenv`.
We have some clues about the problem, but we are ignoring it at the moment. We have switched
the CI tool to _sempaphore_, which use rbenv, so pull requests will be tested in a working
environement.

## Need more tools?
Visit [Wordpress Tools](https://www.wptools.it).

## Contributing

1. Fork it
2. Create your feature branch (`git checkout -b my-new-feature`)
3. Add some specs
4. Commit your changes (`git commit -am 'Added some feature'`)
5. Push to the branch (`git push origin my-new-feature`)
6. Create new Pull Request

## Author

made with ❤️ and ☕️ by [weLaika](https://dev.welaika.com)

## License

(The MIT License)

Copyright © 2012-2019 [weLaika](https://dev.welaika.com)
